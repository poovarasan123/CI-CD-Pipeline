name: CI/CD Pipeline for React Native

on:
  push:
    branches:
      - main  # Trigger the pipeline on pushes to the 'main' branch
  pull_request:
    branches:
      - main  # Also trigger on pull requests targeting the 'main' branch

jobs:
  android-build:
    name: Build Android App  # Job name for building the Android app
    runs-on: ubuntu-latest  # Use the latest Ubuntu environment

    steps:
      - name: Checkout Repository  # Step to checkout the code from the repository
        uses: actions/checkout@v4.2.0

      - name: Set up JDK 17  # Step to set up Java Development Kit
        uses: actions/setup-java@v4.4.0
        with:
          java-version: '17'  # Specify Java version 17
          distribution: 'temurin'  # Use Temurin distribution of JDK
          cache: gradle  # Cache Gradle dependencies for faster builds

      - name: Install Node.js  # Step to install Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: '18'  # Specify Node.js version 18

      - name: Install Dependencies  # Step to install project dependencies
        run: yarn install  # Use Yarn as the package manager

      - name: Build Android  # Step to build the Android app
        run: |
          cd android  # Change directory to the Android project folder
          chmod +x gradlew  # Make the Gradle wrapper executable
          ./gradlew assembleRelease  # Build the release APK

      - name: Upload Android Artifact  # Step to upload the generated APK as an artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          name: android-release-apk  # Name of the artifact for Android release APK
          path: android/app/build/outputs/apk/release/*.apk  # Path to the APK files

  ios-build:
    name: Build iOS App  # Job name for building the iOS app
    runs-on: macos-latest  # Use the latest macOS environment

    steps:
      - name: Checkout Repository  # Step to checkout the code from the repository
        uses: actions/checkout@v4.2.0

      - name: Set up Node.js  # Step to install Node.js for iOS build
        uses: actions/setup-node@v4.1.0
        with:
          node-version: '18'  # Specify Node.js version 18

      - name: Install Dependencies  # Step to install project dependencies
        run: yarn install  # Use Yarn as the package manager

      - name: Install CocoaPods  # Step to install CocoaPods for iOS dependencies
        run: |
          cd ios  # Change directory to the iOS project folder
          pod install  # Install CocoaPods dependencies

      - name: Build iOS  # Step to build the iOS app using Xcode
        env:
          XCODE_WORKSPACE: ios/YourApp.xcworkspace  # Specify the Xcode workspace file path
          XCODE_SCHEME: YourApp  # Specify the Xcode scheme to build
          XCODE_CONFIGURATION: Release  # Specify build configuration (Release)
        run: |
          xcodebuild \
            -workspace $XCODE_WORKSPACE \  # Use specified workspace
            -scheme $XCODE_SCHEME \         # Use specified scheme
            -configuration $XCODE_CONFIGURATION \  # Use specified configuration
            -sdk iphoneos \                  # Target iPhone OS SDK
            -archivePath $PWD/build/$XCODE_SCHEME.xcarchive \  # Set archive path
            archive   # Archive build output

      - name: Upload iOS Artifact  # Step to upload the generated iOS archive as an artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          name: ios-release-archive   # Name of the artifact for iOS release archive
          path: build/YourApp.xcarchive   # Path to the archived build output

# Uncomment below section if you want to include a job for running tests in your pipeline.
# run-tests:
#   name: Run Tests   # Job for running tests on your application code.
#   runs-on: ubuntu-latest   # Use Ubuntu environment for running tests.

#   steps:
#     - name: Checkout Repository   # Checkout code from repository.
#       uses: actions/checkout@v3

#     - name: Install Node.js   # Install Node.js for test execution.
#       uses: actions/setup-node@v3
#       with:
#         node-version: '16'   # Specify Node.js version for tests.

#     - name: Install Dependencies   # Install project dependencies needed for tests.
#       run: yarn install   # Use Yarn as package manager.

#     - name: Run Tests   # Execute tests defined in your application.
#       run: yarn test   # Run test command using Yarn.